import React, { useEffect, useState } from 'react'
import Rte from "./Rte";
import Select from 'react-select';
import { pushNotify } from '../../../../services/NotifyService';
import { AxiosPost } from '../../../../context/UserContext';
import { ScaleLoader } from 'react-spinners';

function EditJob(props) {
    const [isLoading, setIsLoading] = useState(false)
    const initialFormData = {
        title: '', description: '', type: 'Full Time', locations: '', education: [], secretariat_dept: '', head_dept: '',
        start_date: '', end_date: '', status: "active"
    }
    const [formData, setFormData] = useState(initialFormData)

    const formSubmitHandler = async (e) => {
        e.preventDefault()
        console.log(formData)
        if (formData.description.trim() == '' || formData.education.length == 0) {
            pushNotify("error", "Error", "Please fill all required fields.")
            return;
        }
        try {
            setIsLoading(true)
            const data = await AxiosPost("edit_job.php", formData)
            console.log(data)
            if (data.success) {
                pushNotify("success", "Success", "Job Edited Successfully")
                props.fetchJobs()
                props.setEditModal({show:false,id:null})
            } else {
                pushNotify("error", "Error", data.error)
            }
        } catch {
            pushNotify("error", "Error", "Server Error2!")
        } finally {
            setIsLoading(false)
        }
    }

    const formChangeHandler = (e) => {
        setFormData({
            ...formData,
            [e.target.name]: e.target.value
        })
    }

    const educationOptions = [
        { label: 'BA', value: 'BA' },
        { label: 'BBM', value: 'BBM' },
        { label: 'BCOM', value: 'BCOM' },
        { label: 'BSC', value: 'BSC' },
        { label: 'BTech/BE', value: 'BTech/BE' },
        { label: 'Diploma', value: 'Diploma' },
        { label: 'Graduation', value: 'Graduation' },
        { label: 'Intermediate', value: 'Intermediate' },
        { label: 'Masters Degree', value: 'Masters Degree' },
        { label: 'MBA', value: 'MBA' },
        { label: 'MCA', value: 'MCA' },
        { label: 'MSc', value: 'MSc' },
        { label: 'MTech/ME', value: 'MTech/ME' },
        { label: 'Post Graduation', value: 'Post Graduation' },
        { label: 'SSC', value: 'SSC' },
    ]

    const fetchJob = async()=>{
        try {
            setIsLoading(true)
            const data = await AxiosPost("fetch_job_info.php", {sl:props.sl})
            console.log(data)
            if (data.success) {
                setFormData({...data.job,education:JSON.parse(data.job.education)})
            } else {
                pushNotify("error", "Error", data.error)
            }
        } catch {
            pushNotify("error", "Error", "Server Error!")
        } finally {
            setIsLoading(false)
        }
    }

    useEffect(()=>{
        fetchJob()
    },[])

    return (
        <>

            <div className="basic-form">
                {isLoading ? <ScaleLoader cssOverride={{ "display": "flex", "justifyContent": "center", "alignItems": "center" }} /> :

                    <form onSubmit={(e) => formSubmitHandler(e)}>
                        <div className="row">
                            <div className="form-group mb-3 col-xl-4 col-md-6">
                                <label>Title <span className='text-danger'>*</span></label>
                                <input maxLength={50} type="text" className="form-control" name="title" onChange={(e) => formChangeHandler(e)} value={formData.title} required />
                            </div>
                            <div className="form-group mb-3 col-xl-12 col-md-12">
                                <label>Description <span className='text-danger'>*</span></label>
                                <Rte defaulttext={formData.description} setFormData={setFormData} formData={formData}></Rte>
                            </div>
                            <div className="form-group mb-3 col-xl-3 col-md-6">
                                <label>Type <span className='text-danger'>*</span></label>
                                <select className='form-control' name="type" value={formData.type} onChange={(e) => formChangeHandler(e)} id="" required>
                                    <option value="Full Time">Full Time</option>
                                    <option value="Part Time">Part Time</option>
                                </select>
                            </div>
                            <div className="form-group mb-3 col-xl-4 col-md-6">
                                <label>Locations <span className='text-danger'>*</span></label>
                                <input maxLength={50} type="text" className="form-control" name="locations" onChange={(e) => formChangeHandler(e)} value={formData.locations} required />
                            </div>
                            <div className="form-group mb-3 col-xl-5 col-md-6">
                                <label>Educatoinal Qualifications <span className='text-danger'>*</span></label>
                                <Select
                                    value={formData.education}
                                    onChange={(e) => { setFormData({ ...formData, "education": e }) }}
                                    options={educationOptions}
                                    isMulti
                                />
                            </div>
                            <div className="form-group mb-3 col-xl-6 col-md-6">
                                <label>Secretariat Department</label>
                                <input type="text" className="form-control" name="secretariat_dept" onChange={(e) => formChangeHandler(e)} value={formData.secretariat_dept} />
                            </div>
                            <div className="form-group mb-3 col-xl-6 col-md-6">
                                <label>Head of Department <span className='text-danger'>*</span></label>
                                <input type="text" className="form-control" name="head_dept" onChange={(e) => formChangeHandler(e)} value={formData.head_dept} required />
                            </div>
                            <div className="form-group mb-3 col-xl-6 col-md-6">
                                <label>Start Date <span className='text-danger'>*</span></label>
                                <input type="date" className="form-control" name="start_date" onChange={(e) => formChangeHandler(e)} value={formData.start_date} required />
                            </div>
                            <div className="form-group mb-3 col-xl-6 col-md-6">
                                <label>End Date</label>
                                <input type="date" className="form-control" name="end_date" onChange={(e) => formChangeHandler(e)} value={formData.end_date} />
                            </div>
                            <div className="form-group mb-3 col-xl-5 col-md-6">
                                <input type="checkbox" id="vehicle1" name="vehicle1" value={formData.status}
                                    onChange={() => {
                                        if(formData.status=="active"){
                                            setFormData({
                                                ...formData, "status": "inactive"
                                            })
                                        } else{
                                            setFormData({
                                                ...formData, "status": "active"
                                            })
                                        }
                                    }}
                                    defaultChecked={formData.status=="active"?true:false}></input>
                                <label className='ms-2'>Active</label>
                            </div>
                        </div>
                        <button type="submit" className="btn btn-primary">
                            Edit Job
                        </button>
                    </form>
                }
            </div>
        </>
    )
}

export default EditJob