import React, { useEffect, useState } from 'react'
import Select from 'react-select';
import { Axios } from '../../../context/UserContext';
import { pushNotify } from '../../../services/NotifyService';

function ApplyForm(props) {
    const initialFormData = {
        name: '', email: '', phone: '', education: '', year: '', message: '', captcha: ''
    }
    const [formData, setFormData] = useState(initialFormData)
    const [captchaData, setCaptchaData] = useState({ token: '', image: '' });
    const [isLoading, setIsLoading] = useState(false)
    const [selectedFile, setSelectedFile] = useState(null);

    const fetchCaptcha = async (e) => {
        setIsLoading(true)
        e.preventDefault()
        try {
            const { data } = await Axios.post("captcha.php");
            console.log(data);
            setCaptchaData({ token: data.token, image: data.image })
            setFormData({ ...formData, captchaToken: data.token })
        } catch {
            pushNotify("error", "error", "Server Error!")
        } finally {
            setIsLoading(false)
        }
    }

    useEffect(() => {
        const temp = async () => {
            setIsLoading(true)
            try {
                const { data } = await Axios.post("captcha.php");
                console.log(data);
                setCaptchaData({ token: data.token, image: data.image })
                setFormData({ ...formData, captchaToken: data.token })
            } catch {
                pushNotify("error", "error", "Server Error!")
            } finally {
                setIsLoading(false)
            }
        }
        temp()
    }, [])
    const educationOptions = [
        { label: 'BA', value: 'BA' },
        { label: 'BBM', value: 'BBM' },
        { label: 'BCOM', value: 'BCOM' },
        { label: 'BSC', value: 'BSC' },
        { label: 'BTech/BE', value: 'BTech/BE' },
        { label: 'Diploma', value: 'Diploma' },
        { label: 'Graduation', value: 'Graduation' },
        { label: 'Intermediate', value: 'Intermediate' },
        { label: 'Masters Degree', value: 'Masters Degree' },
        { label: 'MBA', value: 'MBA' },
        { label: 'MCA', value: 'MCA' },
        { label: 'MSc', value: 'MSc' },
        { label: 'MTech/ME', value: 'MTech/ME' },
        { label: 'Post Graduation', value: 'Post Graduation' },
        { label: 'SSC', value: 'SSC' },
    ]

    const submitApplication = async (e) => {
        e.preventDefault()
        
        const formData2 = new FormData();
        formData2.append('file', selectedFile);
        formData2.append('name', formData.name);
        formData2.append('email', formData.email);
        formData2.append('phone', formData.phone);
        formData2.append('education', JSON.stringify(formData.education));
        formData2.append('year', formData.year);
        formData2.append('message', formData.message);
        formData2.append('captcha', formData.captcha);
        formData2.append('captchaToken', formData.captchaToken);
        formData2.append('sl', props.applyModal.sl);
        try {
            setIsLoading(true)
            const { data } = await Axios.post('add_application.php', formData2);
            console.log(data)
            if (data.success) {
                setFormData(initialFormData)
                setSelectedFile(null)
                props.setApplyModal({show:false,sl:null})
                pushNotify("success", "success", "Applied successfully")
            }
            else {
                pushNotify("error", "error", data.error)
            }
        } catch {
            pushNotify("error", "error", "Server Error!")
        } finally {
            setIsLoading(false)
        }
    }

    const onChangeHandler = (e) => {
        setFormData({ ...formData, [e.target.name]: e.target.value })
    }

    const handleFileChange = (event) => {
        const file = event.target.files[0];
        setSelectedFile(file)
    };

    return (
        <>
            <form className='basic-form' onSubmit={submitApplication}>
                <div className='row'>
                    <div className='col-md-6'>
                        <label className='m-1'>Name <span className='text-danger'>*</span></label>
                        <input maxLength={50} onChange={onChangeHandler} type="text" value={formData.name} name='name' className='form-control m-1' placeholder='Name' required />
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Email <span className='text-danger'>*</span></label>
                        <input maxLength={50} onChange={onChangeHandler} type="email" value={formData.email} name='email' className='form-control m-1' placeholder='Email' required />
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Phone Number <span className='text-danger'>*</span></label>
                        <div className="input-group m-1">
                            <div className="input-group-text">+91</div>
                            <input onChange={onChangeHandler} type="number" value={formData.phone} name='phone' className='form-control' placeholder='Phone Number' required />
                        </div>
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Educational Qualifications <span className='text-danger'>*</span></label>
                        <Select
                            value={formData.education}
                            onChange={(e) => { setFormData({ ...formData, "education": e }) }}
                            options={educationOptions}
                        />
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Year of Passing <span className='text-danger'>*</span></label>
                        <input onChange={onChangeHandler} type="number" value={formData.year} name='year' className='form-control m-1' placeholder='Year of passing' required />
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Resume <span className='text-danger'>*</span></label>
                        <input type="file" className='form-control m-1' required id="file-upload" accept=".pdf" onChange={handleFileChange} />
                    </div>
                    <div className='col-md-12'>
                        <label className='m-1'>Message <span className='text-danger'>*</span></label>
                        <textarea onChange={onChangeHandler} rows={5} value={formData.message} name='message' type="text" className='form-control m-1' required />
                    </div>
                    <div className='col-md-6 p-2'>
                        <img
                            src={`data:image/jpeg;base64,${captchaData.image}`}
                            alt="captcha"
                            className="mb-3"
                        />
                        <a className="btn btn-sharp" onClick={fetchCaptcha}>
                            <i className="fas fa-sync"></i>
                        </a>
                    </div>
                    <div className='col-md-6'>
                        <label className='m-1'>Captcha <span className='text-danger'>*</span></label>
                        <input onChange={onChangeHandler} type="text" value={formData.captcha} name='captcha' className='form-control m-1' placeholder='Enter Captcha' required />
                    </div>
                    <button className='btn btn-success ms-auto me-2' type='submit' style={{ "width": "fit-content" }}>Submit Application</button>
                </div>
            </form>
        </>
    )
}

export default ApplyForm