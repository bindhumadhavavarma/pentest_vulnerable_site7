import React, { useEffect, useState } from "react";
import "./Tenders.css";
import "./Career.css";
import CareerCard from "./CareerCard";
import ScaleLoader from 'react-spinners/ScaleLoader';
import { Axios } from "../../../context/UserContext";
import { pushNotify } from "../../../services/NotifyService";
import Header from "../Header";

function Career() {
    const [isLoading, setIsLoading] = useState(false);
    const [jobs, setJobs] = useState([]);
    useEffect(() => {
        window.scrollTo(0, 0);
        fetchJobs();
    }, []);

    const fetchJobs = async () => {
        try {
            setIsLoading(true);
            const { data } = await Axios.post("fetch_jobs2.php");
            console.log(data);
            if (data.success) {
                setJobs(data.jobs);
            } else {
                pushNotify("error", "Error", data.error);
            }
        } catch {
            pushNotify("error", "Error", "Server Error");
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <>
            <Header></Header>
            <div className="bg-gray-50 m-r-84">
                <div
                    style={{
                        background:
                            "linear-gradient(0deg, rgb(239, 237, 255) 0%, rgb(255, 255, 255) 100%)",
                    }}
                >
                    <div className="min-h-100 mt-5">
                        <section>
                            <div className="about-pg-content">
                                <div className="container">
                                    <h2 className="apts-team-title">Careers</h2>
                                    <div className="apts-careers-headings mb-5 container">
                                        <div className="container">
                                            {
                                                isLoading ? <ScaleLoader cssOverride={{ "display": "flex", "justifyContent": "center", "alignItems": "center" }} /> :
                                                    jobs.map(job => <CareerCard key={job.sl} job={job}></CareerCard>)
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
        </>
    );
}

export default Career;
